// Copyright (c) 2022 The Linna Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// Author: randyma
// Date: 2022-05-18 18:19:55
// LastEditors: randyma
// LastEditTime: 2022-05-18 18:20:03
// Description: The Linna server RPC protocol for games and apps.
 
syntax = "proto3";

package linna.api;

import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

option go_package = "github.com/doublemo/linna-common/api";
option java_multiple_files = true;
option java_outer_classname = "LinnaApi";
option java_package = "com.doublemo.linna.api";

option csharp_namespace = "Linna.Protobuf";

// Represents an event to be passed through the server to registered event handlers.
message Event {
    // An event name, type, category, or identifier.
    string name = 1;
    // Arbitrary event property values.
    map<string, string> properties = 2;
    // The time when the event was triggered.
    google.protobuf.Timestamp timestamp = 3;
    // True if the event came directly from a client call, false otherwise.
    bool external = 4;
}

// Execute an Lua function on the server.
message Rpc {
  // The identifier of the function.
  string id = 1;
  // The payload of the function which must be a JSON object.
  string payload = 2;
  // The authentication key used when executed as a non-client HTTP request.
  string http_key = 3;
}